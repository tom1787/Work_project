Asthma、疾病史、Matching data、氣喘用藥
libname twb “E:\H107217_1\tom_TWBdata\TWB_NHIRD”;
/*QC ID*/
libname ID " E:\H107217_1\tom_TWBdata\TWB_Data";
libname match" E:\H107217_1\tom_TWBdata\TWB_matching ";
/*將ATC 藥物讀入*/
PROC IMPORT OUT= ATC_ICS
    DATAFILE= "F:\H107217\Tom\20200811_H107217 攜入資料\ATC_ICS.csv"
    DBMS=CSV REPLACE;
   GETNAMES=YES;
   DATAROW=2;
run;
PROC IMPORT OUT= ATC_LABA_ICS
    DATAFILE= "F:\H107217\Tom\20200811_H107217 攜入資料\ATC_LABA_ICS.csv"
    DBMS=CSV REPLACE;
   GETNAMES=YES;
   DATAROW=2;
run;
PROC IMPORT OUT= ATC_LAMA
    DATAFILE= "F:\H107217\Tom\20200811_H107217 攜入資料\ATC_LAMA.csv"
    DBMS=CSV REPLACE;
   GETNAMES=YES;
   DATAROW=2;
run;
PROC IMPORT OUT= ATC_LTR_antagonist
    DATAFILE= "F:\H107217\Tom\20200811_H107217 攜入資料\ATC_LTR_antagonist.csv"
    DBMS=CSV REPLACE;
   GETNAMES=YES;
   DATAROW=2;
run;
PROC IMPORT OUT= ATC_OCS
    DATAFILE= "F:\H107217\Tom\20200811_H107217 攜入資料\ATC_OCS.csv"
    DBMS=CSV REPLACE;
   GETNAMES=YES;
   DATAROW=2;
run;
PROC IMPORT OUT= ATC_SABA
    DATAFILE= "F:\H107217\Tom\20200811_H107217 攜入資料\ATC_SABA.csv"
    DBMS=CSV REPLACE;
   GETNAMES=YES;
   DATAROW=2;
run;

PROC IMPORT OUT= ATC_Xanthine
    DATAFILE= "F:\H107217\Tom\20200811_H107217 攜入資料\ATC_Xanthine.csv"
    DBMS=CSV REPLACE;
   GETNAMES=YES;
   DATAROW=2;
run;

PROC IMPORT OUT= ATC_Xolair
    DATAFILE= "F:\H107217\Tom\20200811_H107217 攜入資料\ATC_Xolair.csv"
    DBMS=CSV REPLACE;
   GETNAMES=YES;
   DATAROW=2;
run;

 /*藥物代碼*/
proc sql noprint;
select quote(trim(DrugCode)) into: ICS separated by "," from ATC_ICS;
quit;
proc sql noprint;
select quote(trim(DrugCode)) into: LABA_ICS separated by "," from ATC_LABA_ICS;
quit;
proc sql noprint;
select quote(trim(DrugCode)) into: LAMA separated by "," from  ATC_LAMA;
quit;
proc sql noprint;
select quote(trim(DrugCode)) into: LTR_antagonist separated by "," from ATC_LTR_antagonist;
quit;
proc sql noprint;
select quote(trim(DrugCode)) into: OCS separated by "," from ATC_OCS;
quit;
proc sql noprint;
select quote(trim(DrugCode)) into: SABA separated by "," from ATC_SABA;
quit;
proc sql noprint;
select quote(trim(DrugCode)) into: Xanthine separated by "," from ATC_Xanthine;
quit;
proc sql noprint;
select quote(trim(DrugCode)) into: Xolair separated by "," from ATC_Xolair;
quit;



data  NHIRD ;
set  twb.qc_nhi_new /*串聯檔案*/;
asthma_code=0;
/*ICD9 ICD10 以2015為基準*/
if input(substr(FEE_YM,1,4),4.)<=2015 & (substr(ICD9CM_1,1,3) in ("493") | 
substr(ICD9CM_2,1,3) in ("493") |  substr(ICD9CM_3,1,3) in ("493") | substr(ICD9CM_4,1,3) in ("493") |  substr(ICD9CM_5,1,3)  in ("493")) 
then asthma_code=1;
if input(substr(FEE_YM,1,4),4.)>2015 & (substr(ICD9CM_1,1,3) in ("J45") | 
substr(ICD9CM_2,1,3) in ("J45") | substr(ICD9CM_3,1,3) in ("J45")|  substr(ICD9CM_4,1,3) in ("J45") | substr(ICD9CM_5,1,3)  in ("J45")) 
then asthma_code=1;
copd_code=0;
if input(substr(FEE_YM,1,4),4.)<=2015 & (substr(ICD9CM_1,1,3) in("491","492","496") |
substr(ICD9CM_2,1,3) in ("491","492","496") | substr(ICD9CM_3,1,3) in ("491","492", "496") | substr(ICD9CM_4,1,3) in ("491","492","496") | substr(ICD9CM_5,1,3) in ("491","492","496")) 
then copd_code=1;
if input(substr(FEE_YM,1,4),4.)>2015 &  (substr(ICD9CM_1,1,4) in ("J44") | 
substr(ICD9CM_2,1,4) in ("J44") |  substr(ICD9CM_3,1,4) in ("J44") | substr(ICD9CM_4,1,4) in ("J44") |  substr(ICD9CM_5,1,4) in ("J44")) 
then copd_code=1;
Depression_code=0;
if input(substr(FEE_YM,1,4),4.)<=2015 &  (substr(ICD9CM_1,1,4) in 
("3004","2962","2963") |  substr(ICD9CM_2,1,4) in ("3004","2962","2963") |  substr(ICD9CM_3,1,4) in ("3004","2962","2963") | substr(ICD9CM_4,1,4)  in ("3004","2962","2963") |  substr(ICD9CM_5,1,4) in ("3004","2962","2963") |  substr(ICD9CM_1,1,3) in ("311") |  substr(ICD9CM_2,1,3) in ("311") |  substr(ICD9CM_3,1,3) in ("311") |  substr(ICD9CM_4,1,3) in ("311") |  substr(ICD9CM_5,1,3) in ("311")) 
then Depression_code=1;
if input(substr(FEE_YM,1,4),4.)>2015 & (substr(ICD9CM_1,1,4) in 
("F341","F329","F339") | substr(ICD9CM_2,1,4) in ("F341","F329","F339") |  substr(ICD9CM_3,1,4) in ("F341","F329","F339") | substr(ICD9CM_4,1,4) in ("F341","F329","F339") | substr(ICD9CM_5,1,4) in ("F341","F329","F339"))
then Depression_code=1;
bd_code=0;
if input(substr(FEE_YM,1,4),4.)<=2015 & (substr(ICD9CM_1,1,4)  in ("2967") | 
substr(ICD9CM_2,1,4) in ("2967") |  substr(ICD9CM_3,1,4) in ("2967") |  substr(ICD9CM_4,1,4) in ("2967") |  substr(ICD9CM_5,1,4) in ("2967"))
then bd_code=1;
if input(substr(FEE_YM,1,4),4.)>2015 & (substr(ICD9CM_1,1,4) in ("F319") | 
substr(ICD9CM_2,1,4) in ("F319") |  substr(ICD9CM_3,1,4) in ("F319")|  substr(ICD9CM_4,1,4) in ("F319") |  substr(ICD9CM_5,1,4) in ("F319")) 
then bd_code=1;
OSA_code=0;
if input(substr(FEE_YM,1,4),4.)<=2015 & (substr(ICD9CM_1,1,5) in ("32723") | 
substr(ICD9CM_2,1,5) in ("32723") | substr(ICD9CM_3,1,5) in ("32723") |  substr(ICD9CM_4,1,5) in ("32723") | substr(ICD9CM_5,1,5) in ("32723")) 
then OSA_code=1;
if input(substr(FEE_YM,1,4),4.)>2015 & (substr(ICD9CM_1,1,5) in ("G4733") | 
substr(ICD9CM_2,1,5) in ("G4733")  |  substr(ICD9CM_3,1,5) in ("G4733") |  substr(ICD9CM_4,1,5) in ("G4733")  |  substr(ICD9CM_5,1,5) in ("G4733")) 
then OSA_code=1;
GERD_code=0;
if input(substr(FEE_YM,1,4),4.)<=2015 & (substr(ICD9CM_1,1,5)  in ("53081") | substr(ICD9CM_2,1,5) in ("53081") | substr(ICD9CM_3,1,5) in ("53081") |  substr(ICD9CM_4,1,5) in ("53081") | substr(ICD9CM_5,1,5) in ("53081"))
then  GERD_code=1;
if input(substr(FEE_YM,1,4),4.)>2015 & (substr(ICD9CM_1,1,4) in ("K219") | substr(ICD9CM_2,1,4) in ("K219") |  substr(ICD9CM_3,1,4) in ("K219") |  substr(ICD9CM_4,1,4) in ("K219") |  substr(ICD9CM_5,1,4) in ("K219"))
then GERD_code=1;
/* allergic rhinitis */
AR_code =0;
If input(substr(FEE_YM,1,4),4.)<=2015 & (substr(ICD9CM_1,1,3) in ("477") | 
substr(ICD9CM_2,1,3) in ("477") | substr(ICD9CM_3,1,3) in ("477") |  substr(ICD9CM_4,1,3) in ("477") | substr(ICD9CM_5,1,3) in ("477")) 
then AR_code =1;
if input(substr(FEE_YM,1,4),4.)>2015 & (substr(ICD9CM_1,1,3)  in ("J30") | substr(ICD9CM_2,1,3) in ("J30") | substr(ICD9CM_3,1,3) in ("J30") |  substr(ICD9CM_4,1,3) in ("J30") | substr(ICD9CM_5,1,3) in ("J30"))
then AR_code =1;
/* Nasal polyposis(ICD9 471 ICD10 J33) */
NP_code =0;
if input(substr(FEE_YM,1,4),4.)<=2015 & (substr(ICD9CM_1,1,3)  in ("471") | 
substr(ICD9CM_2,1,3) in ("471") | substr(ICD9CM_3,1,3) in ("471") |  substr(ICD9CM_4,1,3) in ("471") | substr(ICD9CM_5,1,3) in ("471")) 
then NP_code =1;
if input(substr(FEE_YM,1,4),4.)>2015 & (substr(ICD9CM_1,1,3)  in ("J33") | 
substr(ICD9CM_2,1,3) in ("J33") | substr(ICD9CM_3,1,3) in ("J33") |  substr(ICD9CM_4,1,3) in ("J33") | substr(ICD9CM_5,1,3) in ("J33")) 
then NP_code =1;
/*Chronic sinusitis(ICD9 473 ICD10 J32) */
CS_code =0;
if input(substr(FEE_YM,1,4),4.)<=2015 & (substr(ICD9CM_1,1,3)  in ("473") | 
substr(ICD9CM_2,1,3) in ("473") | substr(ICD9CM_3,1,3) in ("473") |  substr(ICD9CM_4,1,3) in ("473") | substr(ICD9CM_5,1,3) in ("473")) 
then CS_code =1;
if input(substr(FEE_YM,1,4),4.)>2015 & (substr(ICD9CM_1,1,3)  in ("J32") | 
substr(ICD9CM_2,1,3) in ("J32") | substr(ICD9CM_3,1,3) in ("J32") |  substr(ICD9CM_4,1,3) in ("J32") | substr(ICD9CM_5,1,3) in ("J32")) 
then CS_code =1;
/*高血壓*/
Hypertension_code=0;
if input(substr(FEE_YM,1,4),4.)<=2015 & (substr(ICD9CM_1,1,3)  in 
("401","402","403","404","405") | substr(ICD9CM_2,1,3) in ("401","402","403","404","405") | substr(ICD9CM_3,1,3) in ("401","402","403","404","405") | substr(ICD9CM_4,1,3) in ("401","402","403","404","405") | substr(ICD9CM_5,1,3) in ("401","402","403","404","405")) 
then Hypertension_code =1;
if input(substr(FEE_YM,1,4),4.)>2015 & (substr(ICD9CM_1,1,3)  in 
("I10,","I11","I12","I13","I15") | substr(ICD9CM_2,1,3) in ("I10,","I11","I12","I13","I15") | substr(ICD9CM_3,1,3) in ("I10,","I11","I12","I13","I15") | substr(ICD9CM_4,1,3) in ("I10,","I11","I12","I13","I15") | substr(ICD9CM_5,1,3) in ("I10,","I11","I12","I13","I15")) 
then Hypertension_code =1;
/*糖尿病*/
diabetes_code=0;
if input(substr(FEE_YM,1,4),4.)<=2015 & (substr(ICD9CM_1,1,3)  in ("250","251") | 
substr(ICD9CM_2,1,3) in ("250") | substr(ICD9CM_3,1,3) in ("250") |  substr(ICD9CM_4,1,3) in ("250") | substr(ICD9CM_5,1,3) in ("250"))
then diabetes_code =1;
if input(substr(FEE_YM,1,4),4.)>2015 & (substr(ICD9CM_1,1,3)  in 
("E10,","E11","E12","E13","E14") | substr(ICD9CM_2,1,3) in ("E10,","E11","E12","E13","E14") | substr(ICD9CM_3,1,3) in ("E10,","E11","E12","E13","E14") | substr(ICD9CM_4,1,3) in ("E10,","E11","E12","E13","E14") | substr(ICD9CM_5,1,3) in ("E10,","E11","E12","E13","E14"))
then diabetes_code =1;
/*高血脂*/
hyperlipidemia_code=0;
if input(substr(FEE_YM,1,4),4.)<=2015 &  (substr(ICD9CM_1,1,3) in ("272") | 
substr(ICD9CM_2,1,3) in ("272") | substr(ICD9CM_3,1,3) in ("272") |  substr(ICD9CM_4,1,3) in ("272") | substr(ICD9CM_5,1,3) in ("272"))
then hyperlipidemia_code =1;
if input(substr(FEE_YM,1,4),4.)>2015 &  (substr(ICD9CM_1,1,3)  in ("E78") | 
substr(ICD9CM_2,1,3) in ("E78") | substr(ICD9CM_3,1,3) in ("E78") |  substr(ICD9CM_4,1,3) in ("E78") | substr(ICD9CM_5,1,3) in ("E78")) 
then hyperlipidemia_code =1;

/*asthma drug */
ICS =0;
if DRUG_NO in (&ICS) then ICS =1;
if ORDER_CODE in (&ICS) then ICS =1;
LTR_antagonist=0;
if DRUG_NO in (&LTR_antagonist) then LTR_antagonist=1;
if ORDER_CODE in (&LTR_antagonist) then LTR_antagonist=1;
Xanthine=0;
if DRUG_NO in (&Xanthine) then Xanthine=1;
if ORDER_CODE in (&Xanthine) then Xanthine=1;
SABA=0;
if DRUG_NO in (&SABA) then SABA=1;
if ORDER_CODE in (&SABA) then SABA=1;
LABA_ICS=0;
if DRUG_NO in (&LABA_ICS) then LABA_ICS=1;
if ORDER_CODE in (&LABA_ICS) then LABA_ICS=1;
LAMA=0;
if DRUG_NO in (&LAMA) then LAMA=1;
if ORDER_CODE in (&LAMA) then LAMA=1;
Xolair=0;
if DRUG_NO in (&Xolair) then Xolair=1;
if ORDER_CODE in (&Xolair) then Xolair=1;
OCS=0;
if DRUG_NO in (&OCS) then OCS=1;
if ORDER_CODE in (&OCS) then OCS=1;
asthmadrug=0;
if ICS =1 or LTR_antagonist=1 or Xanthine=1 or SABA=1 or LABA_ICS=1 
then asthmadrug=1;
/*日期重新設定*/
if FUNC_DATE not=" " then indate1=FUNC_DATE;
if IN_DATE not=" " then indate1= IN_DATE;
 run;
/*疾病史*/
/*Disease  一年2次判斷*/

data d1 d2 d3 d4 d5 d6 d7 d8 d9 d10 d11;
set NHIRD;
if Depression_code=1 then output d1;
if BD_code=1 then output d2;
if OSA_code=1 then output d3;
if GERD_code=1 then output d4;
if AR_code=1 then output d5;
if NP_code=1 then output d6;
if CS_code=1 then output d7;
if COPD_code=1 then output d8;
if Hypertension_code=1 then output d9;
if diabetes_code=1 then output d10;
if hyperlipidemia_code=1 then output d11;
run;
/*Disease 判斷macro*/
%macro disease;
	data disease;
		set ID.qc_release_no ;
		keep Release_NO;
	run;
	proc sort data= disease;
		by Release_NO;
	run;
	/*總共有11個疾病史*/
	%do i=1 %to 11;
		proc sort data=d&i;
			by Release_NO indate1;
		run;
		/*計算2次診斷下不超過1年就算1*/
		data d&i.1;
			set d&i;
			by Release_NO indate1;
			year=substr(indate1,1,4);
	 		month=substr(indate1,5,2);
			day=substr(indate1,7,2);
			date=MDY(month, day, year);
			lag_date= ifn(first. Release_NO, (.), lag(date));
			dif_day=ifn(first. Release_NO, (.), dif(date));
			d&i.1=0;
			 if dif_day>0 and dif_day< 365.25 then d&i.1=1;
			format date yymmdd10.;
			drop year month day;
			run;
		proc sql;
 			 create table d&i.2 as
  			 select Release_NO, sum(d&i.1) as d&i.1_sum from d&i.1
  			 group by Release_NO; 
		quit;
		/*有大於1次此病人定義為疾病患者*/
		data d&i.3;
			set d&i.2;
			d&i.=0;
			if d&i.1_sum>=1 then d&i.=1;
			keep Release_NO  d&i. ;
		run;
		proc sort data=d&i.3;
			by Release_NO;
		run;
		data  disease;
			merge disease d&i.3;
			by Release_NO;
			if d&i.=. then  d&i.=0;
		run;
		
%end;
%mend;
%disease;
/*疾病史*/
data twb.disease;
	set disease;
	rename  d1= Depression d2=BD d3=OSA d4=GERD d5=AR d6=NP d7=CS d8=COPD d9= Hypertension
			d10=diabetes d11= hyperlipidemia;
run;

/*氣喘*/
data h;
set NHIRD;
If asthma_code=0 then delete;
run;
proc sort data=h;
by  Release_NO indate1;

/*計算2次診斷下不超過1年就算1*/
data h1;
set h;
by Release_NO indate1;
year=substr(indate1,1,4);
month=substr(indate1,5,2);
day=substr(indate1,7,2);
date=MDY(month,day,year);
lag_date= ifn(first. Release_NO, (.), lag(date));
dif_day=ifn(first. Release_NO, (.), dif(date));
asthma1=0;
if dif_day>0 and dif_day< 365.25 then asthma1=1;
format date yymmdd10.;
drop year month day;
run;
/*計算2000-2016年有成立的氣喘個數(一年2次)*/
proc sql;
  create table h2 as
  select Release_NO, sum(asthma1) as asthma_icdtwice_sum from h1
  group by Release_NO; 
quit;
/*有大於1次此病人定義為氣喘患者*/
data h3;
set h2;
asthma_icdtwice=0;
if asthma_icdtwice_sum>=1 then asthma_icdtwice=1;
keep Release_NO asthma_icdtwice asthma_icdtwice_sum; 
run;
/*人數 n=2072*/
proc freq data=h3; table asthma_icdtwice; run;

data asthma_icdtwice;
set h3;
keep Release_NO asthma_icdtwice; 
run;

proc sort data= asthma_icdtwice; by Release_NO; run;
proc sort data= twb.qc_twb_finally; by Release_NO; run;

/*氣喘資訊 與 twb 合併*/
data aa;
merge twb.qc_twb_finally(in=a)  asthma_icdtwice(in=b);
by Release_No;
if asthma_icdtwice=. then asthma_icdtwice=0;
run;
proc sort data=aa; by Release_NO; run;
/*疾病放入*/
proc sort data=twb.disease;	by Release_No; run;
data twb_asthma_icdtwice;
	merge aa(in=a) twb.disease(in=b);
	by Release_No;
run;
proc freq data= twb_asthma_icdtwice;
table asthma_icdtwice; run;
/*新增WHtR 更新MET GROUP 以及smoke group*/
data twb.twb_asthma_icdtwice;
set twb_asthma_icdtwice;
wc_hei=BODY_WAISTLINE / BODY_HEIGHT;
wc_hei_class=0;
if wc_hei >0.5 then wc_hei_class=1;
DRK_new=0;
	if DRK=2 or DRK=3 then DRK_new=1;
	mets_class=0;
	if groupmets=2 or groupmets=3 then mets_class=1;
	smoke_class=0;
if smk_group=2 or smk_group=3 then smoke_class=1;
run;
/*Matching*/
proc psmatch data=twb.twb_asthma_icdtwice;
 class asthma_icdtwice sex;
 psmodel asthma_icdtwice(treated='1') = sex twbage;
 match method= greedy (k=4 ORDER= random (SEED=666)) distance=lps;
 assess lps var= (sex twbage) / weight=none plots= (boxplot barchart);
 output out (obs= match) = match matchid=_MatchID;
run;

proc sort data=match; by _MatchID; run;
proc freq data= match; 	table asthma_icdtwice; run;
/*match 條件*/
data match_data;
	set match;
	drop _MATCHWGT_;
run;
proc sort data= match_data;	by Release_no; run;
/* IID 需要更改長度*/
data bb;
	set twb.gene_id;
	iid_new=iid;
	keep Release_no iid_new;
run;
proc sort data=bb; by Release_no; run;
/*將IID 改為正確的長度*/
data match. twb_match_data_finally;
	merge match_data (in=a) bb (in=b);
	by Release_no;
	if a;
	drop iid;
	rename iid_new=IID;
run;
/*氣喘用藥*/
data NHIRD;
set data.qc_nhi_new;
/*Medication history */
/*糖尿病用藥(METFORMIN) */
METFORMIN=0;
if DRUG_NO in ('A035324100', 'A0353241G0', 'A038498100', 'A0384981G0','A039546100', 
'A042464100', 'A0424641G0', 'A046686100', 'AB34096100', 'AB340961G0', 'AB35665100', 'AB356651G0', 'AB408351G0', 'AB41233100', 'AB412331G0', 'AB49599100', 'AC36201100', 'AC362011G0', 'AC36204100', 'AC362041G0', 'AC36820100', 'AC368201G0', 'AC38680100', 'AC40047100', 'AC400471G0', 'AC40098100', 'AC40119100', 'AC401191G0', 'AC40781100', 'AC407811G0', 'AC407811G4', 'AC407811G7', 'AC417501G0', 'AC42916100', 'AC429161G0', 'AC44233100', 'AC49531100', 'AC495991G0', 'AC57265100', 'AC57979100', 'AC58072100', 'AC58257100', 'AC58534100', 'AC585341G0', 'AC59686100', 'AC596861G0' )
then METFORMIN=1;
if ORDER_CODE in ('A035324100', 'A0353241G0', 'A038498100', 'A0384981G0', 
'A039546100', 'A042464100', 'A0424641G0', 'A046686100', 'AB34096100', 'AB340961G0', 'AB35665100', 'AB356651G0', 'AB408351G0', 'AB41233100', 'AB412331G0', 'AB49599100', 'AC36201100', 'AC362011G0', 'AC36204100', 'AC362041G0', 'AC36820100', 'AC368201G0', 'AC38680100', 'AC40047100', 'AC400471G0', 'AC40098100', 'AC40119100', 'AC401191G0', 'AC40781100', 'AC407811G0', 'AC407811G4', 'AC407811G7', 'AC417501G0', 'AC42916100', 'AC429161G0', 'AC44233100', 'AC49531100', 'AC495991G0', 'AC57265100', 'AC57979100', 'AC58072100', 'AC58257100', 'AC58534100', 'AC585341G0', 'AC59686100', 'AC596861G0') 
then METFORMIN=1;
/*高血脂用藥(statin) */
statin=0;
if DRUG_NO in ('A046022100', 'AA58282100', 'AB46029100', 'AB48586100', 'AB49454100', 
'AC39307100', 'AC39403100', 'AC42539100', 'AC42558100', 'AC47341100', 'AC47924100', 'AC48513100', 'AC48813100', 'AC49360100', 'AC55268100', 'AC55272100', 'AC56804100', 'AC57126100', 'AC57805100', 'AC57809100', 'AC58525100', 'AC58526100', 'AC58605100', 'AC59265100', 'AC59266100', 'AC60174100', 'B024297100', 'B025412100', 'BA26504100', 'BC26147100', 'BC26226100', 'BC26367100', 'BC26368100', 'BC26497100', 'BC26505100', 'BC26582100', 'BC26900100', 'BC27044100', 'BC27256100', 'BC27339100') 
then statin=1;
if ORDER_CODE in ('A046022100', 'AA58282100', 'AB46029100', 'AB48586100', 
'AB49454100', 'AC39307100', 'AC39403100', 'AC42539100', 'AC42558100', 'AC47341100', 'AC47924100', 'AC48513100', 'AC48813100', 'AC49360100', 'AC55268100', 'AC55272100', 'AC56804100', 'AC57126100', 'AC57805100', 'AC57809100',  'AC58525100', 'AC58526100', 'AC58605100', 'AC59265100', 'AC59266100', 'AC60174100', 'B024297100', 'B025412100', 'BA26504100',  'BC26147100', 'BC26226100', 'BC26367100', 'BC26368100', 'BC26497100', 'BC26505100', 'BC26582100', 'BC26900100', 'BC27044100', 'BC27256100', 'BC27339100') 
then statin=1;
/*Aspirin*/
Aspirin=0;
if DRUG_NO in ("A003092100","A004813100","A021870100","A023534100","A024465100",
"A025160100","A026164100","A032045100","A036599100","A0376542B9","A039169277","A040826100","A0429341G0","A044016100","A0440161G0","AC37344100","AC373441G0","AC37702100","AC41220100","AC41814100","AC418141G0","AC41823209","AC41823277","AC42774100","AC42934100","AC43309100","AC433091G0","AC43664100","AC436641G0","AC44176100","AC441761G0","AC495361G0","BC24025100","BC240251G0","N011693100") 
then Aspirin=1;
if ORDER_CODE in ("A003092100","A004813100","A021870100","A023534100","A024465100",
"A025160100","A026164100","A032045100","A036599100","A0376542B9","A039169277","A040826100","A0429341G0","A044016100","A0440161G0","AC37344100","AC373441G0","AC37702100","AC41220100","AC41814100","AC418141G0","AC41823209","AC41823277","AC42774100","AC42934100","AC43309100","AC433091G0","AC43664100","AC436641G0","AC44176100","AC441761G0","AC495361G0","BC24025100","BC240251G0","N011693100") 
then Aspirin=1;
/* Beta_blockers-用於狹心症、高血壓*/
Beta_blockers=0;
if DRUG_NO in ('BC20452100', 'BC22071100', 'BC24532100', 'AC32350221', 
'AC39703100', 'AC10332100', 'B022143100', 'BC221431G0', 'A016350100', 'A018250100', 'A0182501G0', 'A020927100', 'A022259100', 'A029881100', 'A0339001G0', 'AB09102100', 'AB091021G0', 'AB18251100', 'AB43852100', 'BC21303100', 'BC24977414', 'AC46867100', 'A031032100', 'A036844100', 'AB41956100', 'AC29301100', 'AC29313100', 'BC16888100', 'BC17125100', 'BC24039100', 'AC49915100', 'AC49623100', 'AC49544100', 'AC49504100', 'AC49083100', 'AC48905100', 'AB55984100', 'AB48439100', 'AB47538100', 'AB45348100', 'AC50061100', 'AC57868100', 'AC58077100', 'AB44619100', 'AC45354100', 'BC21530100', 'BC22553100', 'A041679100', 'AB29478100', 'AB294781G0', 'AB32322100', 'AB323221G0', 'AB33029100', 'AB330291G0', 'AB34359100', 'AB343591G0', 'AB361291G0', 'AB36130100', 'AB361301G0', 'AB38867100', 'AB388671G0', 'AB44843100', 'AB448431G0', 'AB515971G0', 'AC25840100', 'AC258401G0', 'AC27452100', 'AC274521G0', 'AC29735100', 'AC297351G0', 'AC29804100', 'AC31223100', 'AC312231G0', 'AC33124100', 'AC331241G0', 'AC34300100', 'AC35367100', 'AC353671G0', 'AC36129100', 'AC37928100', 'AC379281G0', 'AC39816100', 'AC398161G0', 'AC39843100', 'AC398431G0', 'AC41497100', 'AC414971G0', 'AC43598100', 'AC435981G0', 'AC43704100', 'AC437041G0', 'AC44163100', 'BC221591G0', 'BC221601G0') 
then Beta_blockers=1;
if ORDER_CODE in ('BC20452100', 'BC22071100', 'BC24532100', 'AC32350221', 
'AC39703100', 'AC10332100', 'B022143100', 'BC221431G0', 'A016350100', 'A018250100', 'A0182501G0', 'A020927100', 'A022259100', 'A029881100', 'A0339001G0', 'AB09102100', 'AB091021G0', 'AB18251100', 'AB43852100', 'BC21303100', 'BC24977414', 'AC46867100', 'A031032100', 'A036844100', 'AB41956100', 'AC29301100', 'AC29313100', 'BC16888100', 'BC17125100', 'BC24039100', 'AC49915100', 'AC49623100', 'AC49544100', 'AC49504100', 'AC49083100', 'AC48905100', 'AB55984100', 'AB48439100', 'AB47538100', 'AB45348100', 'AC50061100', 'AC57868100', 'AC58077100', 'AB44619100', 'AC45354100', 'BC21530100', 'BC22553100', 'A041679100', 'AB29478100', 'AB294781G0', 'AB32322100', 'AB323221G0', 'AB33029100', 'AB330291G0', 'AB34359100', 'AB343591G0', 'AB361291G0', 'AB36130100', 'AB361301G0', 'AB38867100', 'AB388671G0', 'AB44843100', 'AB448431G0', 'AB515971G0', 'AC25840100', 'AC258401G0', 'AC27452100', 'AC274521G0', 'AC29735100', 'AC297351G0', 'AC29804100', 'AC31223100', 'AC312231G0', 'AC33124100', 'AC331241G0', 'AC34300100', 'AC35367100', 'AC353671G0', 'AC36129100', 'AC37928100', 'AC379281G0', 'AC39816100', 'AC398161G0', 'AC39843100', 'AC398431G0', 'AC41497100', 'AC414971G0', 'AC43598100', 'AC435981G0', 'AC43704100', 'AC437041G0', 'AC44163100', 'BC221591G0', 'BC221601G0') 
then Beta_blockers=1;
keep Release_NO  METFORMIN  statin  Aspirin  Beta_blockers;
run;

proc sql;
create table drug_disease as 
select Release_NO, sum(METFORMIN) as  METFORMIN1 ,sum(statin) as  
statin1, sum(Aspirin) as  Aspirin1 ,sum(Beta_blockers) as Beta_blockers1 
from NHIRD 
group by Release_NO;
quit;


data twb.drug_disease;
	set drug_disease;
	 METFORMIN=0; statin=0; Aspirin=0; Beta_blockers=0;
	if METFORMIN1>=1 then METFORMIN=1;
	if statin1>=1 then statin=1;
	if Aspirin1>=1 then Aspirin=1;
	if Beta_blockers1>=1 then Beta_blockers=1;
	drop METFORMIN1 statin1 Aspirin1 Beta_blockers1;
run;


